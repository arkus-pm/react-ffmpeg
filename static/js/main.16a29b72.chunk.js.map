{"version":3,"sources":["waveform.js","CustomNoRowsOverlay.js","DataTable.js","App.js","serviceWorker.js","index.js"],"names":["Waveform","audio","containerRef","useRef","waveSurferRef","isPlaying","useState","toggleIsPlaying","useEffect","waveSurfer","WaveSurfer","create","container","current","fillParent","height","width","barWidth","barHeight","cursorWidth","loadBlob","on","seekTo","destroy","Grid","style","display","alignItems","flexDirection","IconButton","onClick","playPause","color","ref","styled","theme","justifyContent","fill","palette","mode","fillOpacity","columns","field","headerName","flex","hide","sortable","valueGetter","params","row","relativePath","split","slice","type","metadata","duration","valueFormatter","value","toFixed","renderCell","CircularProgress","file","difference","processed","result","Icon","Chip","sx","paddingLeft","icon","variant","label","loaded","FloatRightGridToolbar","props","padding","float","GridToolbarQuickFilter","GridToolbar","DataTable","rows","Box","DataGrid","components","Toolbar","autoHeight","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","App","setProgress","files","setFiles","length","LocalForage","getItem","then","setResolvedFiles","remakeRows","setItem","handleFileInputChange","e","inputFiles","newFiles","makeFilesObject","console","log","Promise","all","map","resolvedRowsMetadata","forEach","resolvedRowMetadata","fileId","processRawData","Array","from","target","ffmpeg","createFFmpeg","logger","message","transcodeAll","a","requestedFiles","i","id","doTranscode","creadtedPath","selectedVideo","isLoaded","load","ratio","createPath","folders","root","path","shift","includes","FS","push","pathToFile","replace","fileName","fetchFile","args","run","data","File","buffer","lastModified","webkitRelativePath","loadMetadata","resolve","reject","reader","FileReader","readAsDataURL","onload","Audio","preload","onloadedmetadata","onerror","error","filter","name","Blob","makeRows","obj","r","Object","values","UploadFiles","Badge","badgeContent","max","Button","component","Input","onChange","inputProps","webkitdirectory","className","direction","spacing","item","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","document","getElementById","createRoot","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.16a29b72.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport {\n    IconButton,\n    Grid,\n} from '@mui/material';\nimport PauseCircleOutlineRoundedIcon from '@mui/icons-material/PauseCircleOutlineRounded';\nimport PlayCircleRoundedIcon from '@mui/icons-material/PlayCircleRounded';\n\n\nconst Waveform = ({ audio }) => {\n  const containerRef = useRef();\n  const waveSurferRef = useRef({\n    isPlaying: () => false,\n  });\n  const [isPlaying, toggleIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const waveSurfer = WaveSurfer.create({\n      container: containerRef.current,\n      fillParent: false,\n      height: 50,\n      width: 200,\n      barWidth: 2,\n      barHeight: 2,\n      cursorWidth: 1,\n    });\n    waveSurfer.loadBlob(audio);\n    waveSurfer.on('ready', () => {\n      waveSurferRef.current = waveSurfer;\n      waveSurfer.seekTo(1);\n    });\n\n    return () => {\n      waveSurfer.destroy();\n    };\n  }, [audio]);\n\n  return (\n    <Grid container>\n<div style={{display: \"flex\", alignItems: \"center\", flexDirection: \"row\"}}>\n    <IconButton\n        onClick={() => {\n          waveSurferRef.current.playPause();\n          toggleIsPlaying(waveSurferRef.current.isPlaying());\n          waveSurferRef.current.on(\"finish\", ()=> {toggleIsPlaying(waveSurferRef.current.isPlaying());});\n        }}\n        color=\"primary\"\n      >\n        {isPlaying ? <PauseCircleOutlineRoundedIcon/> : <PlayCircleRoundedIcon/>}\n      </IconButton>\n    <div style={{width: \"100%\"}} ref={containerRef}></div>\n    </div>\n    </Grid>\n  );\n};\n\n\nexport default Waveform;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { styled } from '@mui/material/styles';\n\nconst StyledGridOverlay = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100%',\n  '& .ant-empty-img-1': {\n    fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626',\n  },\n  '& .ant-empty-img-2': {\n    fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959',\n  },\n  '& .ant-empty-img-3': {\n    fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343',\n  },\n  '& .ant-empty-img-4': {\n    fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c',\n  },\n  '& .ant-empty-img-5': {\n    fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\n    fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff',\n  },\n}));\n\nexport default function CustomNoRowsOverlay() {\n  return (\n    <StyledGridOverlay>\n      <svg\n        width=\"200\"\n        height=\"100\"\n        viewBox=\"0 0 184 152\"\n        aria-hidden\n        focusable=\"false\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(24 31.67)\">\n            <ellipse\n              className=\"ant-empty-img-5\"\n              cx=\"67.797\"\n              cy=\"106.89\"\n              rx=\"67.797\"\n              ry=\"12.668\"\n            />\n            <path\n              className=\"ant-empty-img-1\"\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            />\n            <path\n              className=\"ant-empty-img-2\"\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            />\n            <path\n              className=\"ant-empty-img-3\"\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n            />\n          </g>\n          <path\n            className=\"ant-empty-img-3\"\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          />\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n          </g>\n        </g>\n      </svg>\n      <Box sx={{ mt: 1 }}>No Rows</Box>\n    </StyledGridOverlay>\n  );\n}\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport usePromise from 'react-promise';\nimport { DataGrid, GridToolbar, GridToolbarQuickFilter } from '@mui/x-data-grid';\nimport Waveform from './waveform';\nimport CustomNoRowsOverlay from './CustomNoRowsOverlay';\nimport TrendingDownRoundedIcon from '@mui/icons-material/TrendingDownRounded';\nimport TrendingUpRoundedIcon from '@mui/icons-material/TrendingUpRounded';\nimport Chip from '@mui/material/Chip';\n\n\n\nconst columns = [\n\t{\n    field: 'id',\n    headerName: 'ID',\n    flex: 1,\n    hide: true\n  },\n  { \n  \theaderName: 'Parent Folder',\n  \tsortable: true,\n  \tflex: 0.5,\n  \tvalueGetter: (params) => params.row.relativePath.split('/').slice(-2, -1) || ''\n  },\n  { \n  \tfield: 'fileName', \n  \theaderName: 'FileName',\n  \tsortable: true,\n  \tflex: 0.5,\n  },\n  {\n    field: 'relativePath',\n    headerName: 'Path',\n    sortable: true,\n    flex: 2,\n    hide: true\n  },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 0.5,\n  },\n  {\n    field: 'duration',\n    headerName: 'Duration',\n    flex: 0.25,\n    sortable: true,\n    type: 'number',\n    valueGetter: (params) => params.row.metadata.duration,\n    valueFormatter: (params) => {\n              if (params.value == null) {\n                return 'loading...';\n              }\n              return `${params.value.toFixed(2)}s`;\n            },\n    renderCell: (params) => {\n      if (params.row.metadata.duration == null) {\n                return <CircularProgress/>;\n              }\n      return `${params.row.metadata.duration.toFixed(2)}s`;\n    }\n  },\n  {\n    field: 'waveform',\n    headerName: 'Waveform',\n    flex: 1,\n    renderCell: (params) => (\n    \t<Waveform audio={params.row.file}/>\n    \t)\n  },\n  {\n    field: 'difference',\n    headerName: 'Difference',\n    flex: 0.5,\n    renderCell: (params) => {\n        let difference = (params.row.processed?.result?.metadata.duration-params.row.metadata.duration);\n        if (!!difference){\n        const Icon = () => {if (difference>0) return (<TrendingUpRoundedIcon/>); else return(<TrendingDownRoundedIcon/>)};\n       return(\n        <Chip sx={{paddingLeft: \"10px\"}} icon={<Icon style={{paddingLeft:'2px'}}/>} variant=\"outlined\" color={(difference>0)?\"error\":\"success\"} label={difference.toFixed(2)+\"s\"} />\n        )\n     }\n      }\n  },\n  {\n    field: 'processedDuration',\n    headerName: 'Pr. Duration',\n    flex: 0.5,\n    sortable: true,\n    type: 'number',\n    valueGetter: (params) => params.row.processed?.result?.metadata.duration||null,\n    valueFormatter: (params) => {\n      if (!!params.row?.processed) {\n              if (params.value == null) {\n                return 'loading...';\n              }\n              return `${params.value.toFixed(2)}s`;\n            }\n            },\n    renderCell: (params) => {\n      if (!!params.row.processed) {\n        if (!params.row.processed.loaded)\n        return (\n          <CircularProgress/>\n        )\n        return(\n          `${params.row.processed?.result.metadata.duration.toFixed(2)}s`\n        )\n    }\n    }\n  },\n  {\n    field: 'processedFile',\n    headerName: 'Processed',\n    flex: 1,\n    renderCell: (params) => {\n      if (!!params.row.processed) {\n        if (!params.row.processed.loaded)\n        return (\n          <CircularProgress/>\n        )\n        return(\n          <div>\n            <Waveform audio={params.row.processed.result.file}/>\n          </div>\n        )\n    }\n  }\n  },\n\n];\n\nconst FloatRightGridToolbar = (props) => {\n\treturn(\n\t\t<div style={{padding:\"0 2em 0 2em\"}}>\n\t\t<div style={{float: 'right', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '100%'}}>\n\t\t\t<GridToolbarQuickFilter /> <GridToolbar {...props}/>\n\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default function DataTable({rows}) {\n  return (\n  \t<Box sx={{ width: '100%' }}>\n  \t<DataGrid\n  \t\tcomponents={{ Toolbar: FloatRightGridToolbar, }}\n  \t\tautoHeight\n        rows={rows}\n        columns={columns}\n        pageSize={100}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n        disableSelectionOnClick\n      />\n      </Box>\n  \t)\n}\n","import React, {\n    useState,\n    useEffect\n} from 'react';\nimport {\n    createFFmpeg,\n    fetchFile\n} from '@ffmpeg/ffmpeg';\nimport './App.css';\nimport {\n    Input,\n    Button,\n    CardMedia,\n    Grid,\n    LinearProgress,\n    Alert,\n    Badge,\n} from '@mui/material';\nimport DataTable from './DataTable';\nimport LocalForage from 'localforage';\n\n\nfunction App() {\n    const [videoSrc, setVideoSrc] = useState('');\n    const [progress, setProgress] = useState(0);\n    const [files, setFiles] = useState({rows: []});\n    if (!!files && !files.rows?.length) LocalForage.getItem('initial-data').then(value=>{if (!!value) setFiles(value)});\n    const setResolvedFiles = (files, writeInStorage = true) => {\n      files = remakeRows({...files});\n      setFiles(files);\n      LocalForage.setItem('initial-data', files);\n    }\n    const processRawData = (inputFiles) => {\n      let newFiles = makeFilesObject(inputFiles);\n        setFiles(newFiles);\n        console.log(newFiles);\n        Promise.all(newFiles.rows.map(row => row.metadata)).then(resolvedRowsMetadata =>\n          {\n            resolvedRowsMetadata.forEach(resolvedRowMetadata => {\n              newFiles[resolvedRowMetadata.fileId].metadata = resolvedRowMetadata;\n            });\n            setResolvedFiles(newFiles);\n            console.log(\"promise resolved\",newFiles);\n          });\n        // Promise.all(newFiles.map(f => f.metadata))\n        //     .then(resolvedFiles => {\n        //       let newResolvedRows = makeResolvedRows(resolvedFiles\n        //                     .map(rf => {\n        //                         rf.metadata = {\n        //                             data: rf.data,\n        //                             duration: rf.duration\n        //                         };\n        //                         return rf;\n        //                     }));\n        //         setRows(\n        //               newResolvedRows\n        //         );\n        //         console.log(\"resolved rows seted\", newResolvedRows);\n        //         LocalForage.setItem('initial-data', newResolvedRows);\n        //     });\n    }\n    const handleFileInputChange = (e) => {\n        processRawData(Array.from(e.target.files));\n    };\n    const [message, setMessage] = useState('Select file & click start');\n    const ffmpeg = createFFmpeg({\n        log: false,\n        logger: ({\n            type,\n            message\n        }) => {\n            if (message !== \"use ffmpeg.wasm v0.10.0\") console.log(type, message)\n        }\n    });\n    const transcodeAll = async() => {\n      let requestedFiles = {...files};\n      \n      //make a message\n      for (let i = 0; i < requestedFiles.rows.length; )\n      {\n        requestedFiles[requestedFiles.rows[i].id].processed = {loaded: false};\n        i++;\n      }\n\n      //notify about started processing\n      setFiles( requestedFiles, false );\n\n      //make processing\n      for (let i = 0; i < requestedFiles.rows.length; )\n      {\n        let result = await doTranscode(requestedFiles.rows[i]);\n        requestedFiles[requestedFiles.rows[i].id].processed = {result: result, loaded: true};\n        i++;\n      }\n\n      //notify about started processing\n      setResolvedFiles( requestedFiles );\n\n\n\n\n\n    }\n    let creadtedPath = [];\n    const doTranscode = async(row) => {\n        let selectedVideo = row;\n        console.log('Loading ffmpeg-core.js');\n        if (!ffmpeg.isLoaded()) await ffmpeg.load();\n        ffmpeg.setProgress(({\n            ratio\n        }) => {\n            setProgress(ratio * 100);\n        });\n        console.log('Start transcoding');\n\n        const createPath = (folders, root=\"\") => {\n          if (folders.length<=0) return;\n          let path = root + \"/\" + folders.shift();\n          if (creadtedPath.includes(path)) return;\n          ffmpeg.FS(\"mkdir\", path);\n          creadtedPath.push(path);\n          console.log(path, 'created');\n          if (folders.length>0) createPath(folders, path);\n          console.log(path+\" created\");\n        }\n        const pathToFile = selectedVideo.relativePath.replace(\"/\"+selectedVideo.fileName,\"\")\n        console.log(pathToFile);\n        createPath(pathToFile.split(\"/\"));\n\n\n        ffmpeg.FS('writeFile', \"/\"+selectedVideo.relativePath, await fetchFile(selectedVideo.file));\n        console.log(\"/\"+selectedVideo.relativePath);\n        const args = `-i ${selectedVideo.relativePath} -q:a 0 -af silenceremove=1:0:-50dB:0:0:-1:0:-50dB ${selectedVideo.relativePath.replace(selectedVideo.fileName, \"processed_\"+selectedVideo.fileName)}`;\n        await ffmpeg.run(...args.split(' '));\n        console.log('Complete transcoding');\n        const data = await ffmpeg.FS('readFile', selectedVideo.relativePath.replace(selectedVideo.fileName, \"processed_\"+selectedVideo.fileName));\n        let file = new File([data.buffer], \"processed_\"+selectedVideo.fileName, {type: selectedVideo.file.type, lastModified: selectedVideo.file.lastModified, webkitRelativePath: selectedVideo.relativePath.replace(selectedVideo.fileName, \"trimmed\"+selectedVideo.fileName), });\n        let metadata = await loadMetadata(file, row.id);\n        return {file, metadata};\n    };\n    const loadMetadata = (file, id) => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let audio = new Audio(reader.result);\n            audio.preload = \"metadata\";\n            audio.onloadedmetadata = () => {\n                resolve({\n                    data: reader.result,\n                    duration: audio.duration,\n                    fileId: id\n                })\n            };\n        }\n        reader.onerror = error => reject(error);\n    });\n    const makeRows = (inputFiles) => {\n        return inputFiles.filter(e => {\n            if (e.name[0] !== \".\" && e instanceof Blob) return e\n        }).map((e) =>  {\n            return  {\n                  file: e,\n                  id: e.webkitRelativePath,\n                  fileName: e.name,\n                  relativePath: e.webkitRelativePath,\n                  type: e.type,\n                  metadata: loadMetadata(e, e.webkitRelativePath)\n            }\n        });\n    }\n    const makeFilesObject = (inputFiles) => {\n      let rows = makeRows(inputFiles);\n      let obj = {};\n      rows.forEach(r=>{\n        obj[r.id] = r\n      });\n      obj.rows = Object.values(obj);\n      return obj;\n    }\n    const remakeRows = (files) => {\n      delete files.rows;\n      files.rows = Object.values(files);\n      return files\n    }\n\n\n    const UploadFiles = () => {\n      return(\n        <Grid container justifyContent=\"center\" alignItems=\"center\"\n         height={'100%'}\n        >\n        <Badge badgeContent={files.rows.length} color=\"primary\" max={9999}>\n      <Button variant={files.rows.length?\"outlined\":\"contained\"} component=\"label\">\n  {files.rows.length?'Reupload folder':'Upload folder'}\n        <Input\n        style={{display:'none'}}\n        onChange={handleFileInputChange}\n        inputProps={{webkitdirectory:'true'}}\n        type={\"file\"}\n        />\n        </Button>\n        </Badge>\n\n        <Button onClick={transcodeAll}>Encode All</Button>\n        </Grid>\n        );\n    };\n  return (\n<div className=\"App\">\n  <Grid\n    container\n    direction=\"column\"\n    alignItems=\"center\"\n    spacing={2}\n    >\n    <Grid item>\n      </Grid>\n      <Grid item>\n      <UploadFiles/>\n      </Grid>\n      <Grid item sx={{width: '100%'}}>\n      <DataTable rows={files.rows}/>\n    </Grid>\n  </Grid>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createRoot } from 'react-dom/client';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}