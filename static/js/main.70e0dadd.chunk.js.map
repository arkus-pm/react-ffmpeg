{"version":3,"sources":["waveform.js","CustomNoRowsOverlay.js","DataTable.js","App.js","serviceWorker.js","index.js"],"names":["Waveform","audio","containerRef","useRef","waveSurferRef","isPlaying","useState","toggleIsPlaying","useEffect","waveSurfer","WaveSurfer","create","container","current","fillParent","height","width","barWidth","barHeight","cursorWidth","loadBlob","on","seekTo","destroy","Grid","style","display","alignItems","flexDirection","IconButton","onClick","playPause","color","ref","styled","theme","justifyContent","fill","palette","mode","fillOpacity","columns","field","headerName","flex","hide","sortable","valueGetter","params","row","relativePath","split","slice","type","metadata","duration","valueFormatter","value","toFixed","renderCell","file","FloatRightGridToolbar","props","padding","float","GridToolbarQuickFilter","GridToolbar","DataTable","rows","Box","sx","DataGrid","components","Toolbar","autoHeight","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","App","setRows","handleFileInputChange","e","newRows","makeRows","Array","from","target","files","console","log","Promise","all","map","f","then","resolvedFiles","makeResolvedRows","rf","data","createFFmpeg","logger","message","filter","name","Blob","id","webkitRelativePath","fileName","resolve","reject","reader","FileReader","readAsDataURL","onload","Audio","result","preload","onloadedmetadata","onerror","error","UploadFiles","Badge","badgeContent","length","max","Button","variant","component","Input","onChange","inputProps","webkitdirectory","className","direction","spacing","item","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","document","getElementById","createRoot","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.70e0dadd.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport {\n    IconButton,\n    Grid,\n} from '@mui/material';\nimport PauseCircleOutlineRoundedIcon from '@mui/icons-material/PauseCircleOutlineRounded';\nimport PlayCircleRoundedIcon from '@mui/icons-material/PlayCircleRounded';\n\n\nconst Waveform = ({ audio }) => {\n  const containerRef = useRef();\n  const waveSurferRef = useRef({\n    isPlaying: () => false,\n  });\n  const [isPlaying, toggleIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const waveSurfer = WaveSurfer.create({\n      container: containerRef.current,\n      fillParent: false,\n      height: 50,\n      width: 200,\n      barWidth: 2,\n      barHeight: 2,\n      cursorWidth: 1,\n    });\n    waveSurfer.loadBlob(audio);\n    waveSurfer.on('ready', () => {\n      waveSurferRef.current = waveSurfer;\n      waveSurfer.seekTo(1);\n    });\n\n    return () => {\n      waveSurfer.destroy();\n    };\n  }, [audio]);\n\n  return (\n    <Grid container>\n<div style={{display: \"flex\", alignItems: \"center\", flexDirection: \"row\"}}>\n    <IconButton\n        onClick={() => {\n          waveSurferRef.current.playPause();\n          toggleIsPlaying(waveSurferRef.current.isPlaying());\n          waveSurferRef.current.on(\"finish\", ()=> {toggleIsPlaying(waveSurferRef.current.isPlaying());});\n        }}\n        color=\"primary\"\n      >\n        {isPlaying ? <PauseCircleOutlineRoundedIcon/> : <PlayCircleRoundedIcon/>}\n      </IconButton>\n    <div style={{width: \"100%\"}} ref={containerRef}></div>\n    </div>\n    </Grid>\n  );\n};\n\n\nexport default Waveform;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { styled } from '@mui/material/styles';\n\nconst StyledGridOverlay = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100%',\n  '& .ant-empty-img-1': {\n    fill: theme.palette.mode === 'light' ? '#aeb8c2' : '#262626',\n  },\n  '& .ant-empty-img-2': {\n    fill: theme.palette.mode === 'light' ? '#f5f5f7' : '#595959',\n  },\n  '& .ant-empty-img-3': {\n    fill: theme.palette.mode === 'light' ? '#dce0e6' : '#434343',\n  },\n  '& .ant-empty-img-4': {\n    fill: theme.palette.mode === 'light' ? '#fff' : '#1c1c1c',\n  },\n  '& .ant-empty-img-5': {\n    fillOpacity: theme.palette.mode === 'light' ? '0.8' : '0.08',\n    fill: theme.palette.mode === 'light' ? '#f5f5f5' : '#fff',\n  },\n}));\n\nexport default function CustomNoRowsOverlay() {\n  return (\n    <StyledGridOverlay>\n      <svg\n        width=\"200\"\n        height=\"100\"\n        viewBox=\"0 0 184 152\"\n        aria-hidden\n        focusable=\"false\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(24 31.67)\">\n            <ellipse\n              className=\"ant-empty-img-5\"\n              cx=\"67.797\"\n              cy=\"106.89\"\n              rx=\"67.797\"\n              ry=\"12.668\"\n            />\n            <path\n              className=\"ant-empty-img-1\"\n              d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            />\n            <path\n              className=\"ant-empty-img-2\"\n              d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            />\n            <path\n              className=\"ant-empty-img-3\"\n              d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n            />\n          </g>\n          <path\n            className=\"ant-empty-img-3\"\n            d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          />\n          <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\n            <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n            <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n          </g>\n        </g>\n      </svg>\n      <Box sx={{ mt: 1 }}>No Rows</Box>\n    </StyledGridOverlay>\n  );\n}\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport usePromise from 'react-promise';\nimport { DataGrid, GridToolbar, GridToolbarQuickFilter } from '@mui/x-data-grid';\nimport Waveform from './waveform';\nimport CustomNoRowsOverlay from './CustomNoRowsOverlay';\n\nconst columns = [\n\t{\n    field: 'id',\n    headerName: 'ID',\n    flex: 1,\n    hide: true\n  },\n  { \n  \theaderName: 'Locale',\n  \tsortable: true,\n  \tflex: 0.5,\n  \tvalueGetter: (params) => params.row.relativePath.split('/').slice(-2, -1) || ''\n  },\n  { \n  \tfield: 'fileName', \n  \theaderName: 'FileName',\n  \tsortable: true,\n  \tflex: 1,\n  },\n  {\n    field: 'relativePath',\n    headerName: 'Path',\n    sortable: true,\n    flex: 2,\n    hide: true\n  },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 1,\n  },\n  {\n    field: 'duration',\n    headerName: 'Duration',\n    flex: 0.8,\n    sortable: true,\n    type: 'number',\n    valueGetter: (params) => params.row.metadata.duration,\n    valueFormatter: (params) => {\n              if (params.value == null) {\n                return '';\n              }\n              return `${params.value.toFixed(2)}s`;\n            },\n  },\n  {\n    field: 'waveform',\n    headerName: 'Waveform',\n    flex: 2,\n    renderCell: (params) => (\n    \t<Waveform audio={params.row.file}/>\n    \t)\n  },\n\n];\n\nconst FloatRightGridToolbar = (props) => {\n\treturn(\n\t\t<div style={{padding:\"0 2em 0 2em\"}}>\n\t\t<div style={{float: 'right', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '100%'}}>\n\t\t\t<GridToolbarQuickFilter /> <GridToolbar {...props}/>\n\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default function DataTable({rows}) {\n  return (\n  \t<Box sx={{ width: '100%' }}>\n  \t<DataGrid\n  \t\tcomponents={{ Toolbar: FloatRightGridToolbar, }}\n  \t\tautoHeight\n        rows={rows}\n        columns={columns}\n        pageSize={100}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n        disableSelectionOnClick\n      />\n      </Box>\n  \t)\n}\n","import React, {\n    useState\n} from 'react';\nimport {\n    createFFmpeg,\n    fetchFile\n} from '@ffmpeg/ffmpeg';\nimport './App.css';\nimport {\n    Input,\n    Button,\n    CardMedia,\n    Grid,\n    LinearProgress,\n    Alert,\n    Badge,\n} from '@mui/material';\nimport DataTable from './DataTable';\n\n\nfunction App() {\n    const [videoSrc, setVideoSrc] = useState('');\n    const [selectedVideo, setSelectedVideo] = useState();\n    const [progress, setProgress] = useState(0);\n    const [rows, setRows] = useState([]);\n    const handleFileInputChange = (e) => {\n        let newRows = makeRows(Array.from(e.target.files));\n        console.log(newRows);\n        setRows(newRows);\n        console.log(newRows[0].metadata);\n        Promise.all(newRows.map(f => f.metadata))\n            .then(resolvedFiles => {\n                setRows(\n                    (\n                        makeResolvedRows(resolvedFiles\n                            .map(rf => {\n                                rf.metadata = {\n                                    data: rf.data,\n                                    duration: rf.duration\n                                };\n                                return rf;\n                            }))\n                    )\n                );\n            });\n    };\n    const [message, setMessage] = useState('Select file & click start');\n    const ffmpeg = createFFmpeg({\n        log: false,\n        logger: ({\n            type,\n            message\n        }) => {\n            if (message !== \"use ffmpeg.wasm v0.10.0\") console.log(type, message)\n        }\n    });\n    const doTranscode = async() => {\n        setMessage('Loading ffmpeg-core.js');\n        await ffmpeg.load();\n        ffmpeg.setProgress(({\n            ratio\n        }) => {\n            setProgress(ratio * 100);\n        });\n        setMessage('Start transcoding');\n        ffmpeg.FS('writeFile', selectedVideo.name, await fetchFile(selectedVideo));\n        await ffmpeg.run('-i', selectedVideo.name, '-c:v', 'libx264', 'test.mp4');\n        setMessage('Complete transcoding');\n        const data = await ffmpeg.FS('readFile', 'test.mp4');\n        setVideoSrc(URL.createObjectURL(new Blob([data.buffer], {\n            type: 'video/mp4'\n        })));\n    };\n    const loadMetadata = file => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n            let audio = new Audio(reader.result);\n            audio.preload = \"metadata\";\n            audio.onloadedmetadata = () => {\n                resolve({\n                    data: reader.result,\n                    duration: audio.duration,\n                    file: file\n                })\n            };\n        }\n        reader.onerror = error => reject(error);\n    });\n    const makeRows = (files) => {\n        return files.filter(e => {\n            if (e.name[0] !== \".\" && e instanceof Blob) return e\n        }).map((e) => {\n            return {\n                file: e,\n                id: e.webkitRelativePath,\n                fileName: e.name,\n                relativePath: e.webkitRelativePath,\n                type: e.type,\n                metadata: loadMetadata(e),\n            }\n        });\n    }\n    const makeResolvedRows = (files) => {\n        return files.filter(e => {\n            e = e.file;\n            if (e.name[0] !== \".\" && e instanceof Blob) return e\n        }).map((e) => {\n            let metadata = e.metadata;\n            e = e.file;\n            return {\n                file: e,\n                id: e.webkitRelativePath,\n                fileName: e.name,\n                relativePath: e.webkitRelativePath,\n                type: e.type,\n                metadata: metadata,\n            }\n        });\n    }\n    const UploadFiles = () => {\n      return(\n        <Grid container justifyContent=\"center\" alignItems=\"center\"\n         height={'100%'}\n        >\n        <Badge badgeContent={rows.length} color=\"primary\" max={9999}>\n      <Button variant={rows.length?\"outlined\":\"contained\"} component=\"label\">\n  {rows.length?'Reupload folder':'Upload folder'}\n        <Input\n        style={{display:'none'}}\n        onChange={handleFileInputChange}\n        inputProps={{webkitdirectory:'true'}}\n        type={\"file\"}\n        />\n        </Button>\n        </Badge>\n        </Grid>\n        );\n    };\n  return (\n<div className=\"App\">\n  <Grid\n    container\n    direction=\"column\"\n    alignItems=\"center\"\n    spacing={2}\n    >\n    <Grid item>\n      </Grid>\n      <Grid item>\n      <UploadFiles/>\n      </Grid>\n      <Grid item sx={{width: '100%'}}>\n      <DataTable rows={rows}/>\n    </Grid>\n  </Grid>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createRoot } from 'react-dom/client';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}